blueprint:
  name: Unavailable Entity Notification
  description: Regularly test all entities' status to check for unavailability.
  domain: automation
  source_url: https://github.com/J1A-T13N/blueprints_repo/edit/master/unavailable_entities_notification/unavailable_entities_notification.yaml

  # Blueprint Inputs
  input:
    test_day:
      name: 'Day to test on'
      description: 'Run test day'
      selector:
        select:
          mode: 'dropdown'
          multiple: true
          options:
            - label: 'Monday'
              value: '0'
            - label: 'Tueday'
              value: '1'
            - label: 'Wednesday'
              value: '2'
            - label: 'Thursday'
              value: '3'
            - label: 'Friday'
              value: '4'
            - label: 'Saturday'
              value: '5'
            - label: 'Sunday'
              value: '6'

    test_time:
      name: Time to test on
      description: Test is run at configured time
      default: '10:00:00'
      selector:
        time: {}

    exclude:
      name: Excluded Entities
      description: Entities (e.g. smartphone) to exclude from detection. Only entities and devices are supported, areas must be expanded!
      default: {}
      selector:
        target:

    actions:
      name: Actions
      description: Notifications or similar to be run. {{entities}} is replaced with the names of unavailable entities.
      selector:
        action:

# Variables used in the automation
variables:
  current_day: '{{ now().weekday() | int }}'
  test_day: !input 'test_day'
  exclude: !input 'exclude'
  entities: >-
    {% set unavailable_entity = namespace(fields=[], excludedEntities = []) %}
    {% if exclude.entity_id is defined %} 
        {% set unavailable_entity.excludedEntities = unavailable_entity.excludedEntities + exclude.entity_id %}
    {% endif %}
    {% if exclude.device_id is defined %}
      {% for device_id in exclude.device_id %}
        {% set unavailable_entity.excludedEntities = unavailable_entity.excludedEntities + device_entities(device_id) %}
      {% endfor %}
    {% endif %}

    {% for entity in states | selectattr('state', 'eq', 'unavailable') %}
      {% set field = {
        "entity_id": entity.entity_id,
        "name": entity.name,
        "area_name":  '' if area_name(entity.entity_id) is none else area_name(entity.entity_id),
        "state": entity.state
      } %}
      {% if field.state == 'unavailable' and not field.entity_id in unavailable_entity.excludedEntities %}
        {% set unavailable_entity.fields = unavailable_entity.fields + [field] %}
      {% endif %}
    {% endfor %}
    {{ unavailable_entity.fields }}
  entities_text: >-
    {% set unavailable_entity = namespace(fields=[], excludedEntities = []) %}
    {% if exclude.entity_id is defined %}
        {% set unavailable_entity.excludedEntities = unavailable_entity.excludedEntities + exclude.entity_id %}
    {% endif %}
    {% if exclude.device_id is defined %}
      {% for device_id in exclude.device_id %}
        {% set unavailable_entity.excludedEntities = unavailable_entity.excludedEntities + device_entities(device_id) %}
      {% endfor %}
    {% endif %}
    {% for entity in states | selectattr('state', 'eq', 'unavailable') %}
        {% if entity.state == 'unavailable' and not entity.entity_id in unavailable_entity.excludedEntities %}
          {% set unavailable_entity.fields = unavailable_entity.fields + [entity.name] %}
        {% endif %}
    {% endfor %}
    {{"â¤µ \n- "}}{{unavailable_entity.fields|join('\n- ')}}

# Triggers
trigger:
  - platform: time
    at: !input 'test_time'


# Conditions used to determine if the automation should run for the specific trigger event
condition:
# Check if the automation is supposed to be executed during that specific weekday
  - condition: template
    value_template: >-
        {{ current_day in test_day | string }}


  # Check if the entities list is not empty
  - condition: template
    value_template: >-
        {{ entities_text|string|length > 0 and entities|length > 0 }}


# Actions
action:
  - choose: []
    default: !input 'actions'


mode: single
max_exceeded: silent
